{"ast":null,"code":"var _jsxFileName = \"/home/mayank/WEBAPPS/ros2-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ROSLIB from 'roslib';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [connected, setConnected] = useState(false);\n  const [ros, setRos] = useState(null);\n  useEffect(() => {\n    const newRos = new ROSLIB.Ros({\n      url: 'ws://localhost:9090'\n    });\n    newRos.on('connection', () => {\n      console.log('Connected to websocket server.');\n      setConnected(true);\n    });\n    newRos.on('error', error => {\n      console.log('Error connecting to websocket server: ', error);\n      setConnected(false);\n    });\n    newRos.on('close', () => {\n      console.log('Connection to websocket server closed.');\n      setConnected(false);\n    });\n    setRos(newRos);\n    return () => {\n      if (newRos) {\n        newRos.close();\n      }\n    };\n  }, []);\n  const handleButtonClick = buttonName => {\n    console.log(`Button ${buttonName} clicked`);\n    // Add your button logic here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ROS 2 Humble React App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-title\",\n        children: [\"Connection status: \", connected ? 'Connected' : 'Disconnected']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-grid\",\n      children: ['Button1', 'Button2', 'Button3', 'Button4'].map((buttonName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/path/to/${buttonName.toLowerCase()}-icon.png`,\n          alt: buttonName,\n          className: \"button-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"robot-button\",\n          onClick: () => handleButtonClick(buttonName),\n          children: buttonName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LzKshbznr42+U788MOQQaInSK+I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ROSLIB","jsxDEV","_jsxDEV","App","_s","connected","setConnected","ros","setRos","newRos","Ros","url","on","console","log","error","close","handleButtonClick","buttonName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","src","toLowerCase","alt","onClick","_c","$RefreshReg$"],"sources":["/home/mayank/WEBAPPS/ros2-react-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ROSLIB from 'roslib';\nimport './App.css';\n\nfunction App() {\n  const [connected, setConnected] = useState(false);\n  const [ros, setRos] = useState(null);\n\n  useEffect(() => {\n    const newRos = new ROSLIB.Ros({\n      url: 'ws://localhost:9090'\n    });\n\n    newRos.on('connection', () => {\n      console.log('Connected to websocket server.');\n      setConnected(true);\n    });\n\n    newRos.on('error', (error) => {\n      console.log('Error connecting to websocket server: ', error);\n      setConnected(false);\n    });\n\n    newRos.on('close', () => {\n      console.log('Connection to websocket server closed.');\n      setConnected(false);\n    });\n\n    setRos(newRos);\n\n    return () => {\n      if (newRos) {\n        newRos.close();\n      }\n    };\n  }, []);\n\n  const handleButtonClick = (buttonName) => {\n    console.log(`Button ${buttonName} clicked`);\n    // Add your button logic here\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>ROS 2 Humble React App</h1>\n        <p className=\"sub-title\">Connection status: {connected ? 'Connected' : 'Disconnected'}</p>\n      </header>\n      <div className=\"button-grid\">\n        {['Button1', 'Button2', 'Button3', 'Button4'].map((buttonName, index) => (\n          <div key={index} className=\"button-wrapper\">\n            <img src={`/path/to/${buttonName.toLowerCase()}-icon.png`} alt={buttonName} className=\"button-icon\" />\n            <button className=\"robot-button\" onClick={() => handleButtonClick(buttonName)}>\n              {buttonName}\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}