{"ast":null,"code":"var _jsxFileName = \"/home/mayank/WEBAPPS/ros2-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ROSLIB from 'roslib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [connected, setConnected] = useState(false);\n  const [ros, setRos] = useState(null);\n  useEffect(() => {\n    const newRos = new ROSLIB.Ros({\n      url: 'ws://localhost:9090'\n    });\n    newRos.on('connection', () => {\n      console.log('Connected to websocket server.');\n      setConnected(true);\n    });\n    newRos.on('error', error => {\n      console.log('Error connecting to websocket server: ', error);\n      setConnected(false);\n    });\n    newRos.on('close', () => {\n      console.log('Connection to websocket server closed.');\n      setConnected(false);\n    });\n    setRos(newRos);\n    return () => {\n      if (newRos) {\n        newRos.close();\n      }\n    };\n  }, []);\n  const publishMessage = () => {\n    if (ros) {\n      const topic = new ROSLIB.Topic({\n        ros: ros,\n        name: '/test_topic',\n        messageType: 'std_msgs/String'\n      });\n      const message = new ROSLIB.Message({\n        data: 'Hello from React!'\n      });\n      topic.publish(message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ROS 2 Humble React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connection status: \", connected ? 'Connected' : 'Disconnected']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: publishMessage,\n      children: \"Publish Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LzKshbznr42+U788MOQQaInSK+I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ROSLIB","jsxDEV","_jsxDEV","App","_s","connected","setConnected","ros","setRos","newRos","Ros","url","on","console","log","error","close","publishMessage","topic","Topic","name","messageType","message","Message","data","publish","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/mayank/WEBAPPS/ros2-react-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ROSLIB from 'roslib';\n\nfunction App() {\n  const [connected, setConnected] = useState(false);\n  const [ros, setRos] = useState(null);\n\n  useEffect(() => {\n    const newRos = new ROSLIB.Ros({\n      url: 'ws://localhost:9090'\n    });\n\n    newRos.on('connection', () => {\n      console.log('Connected to websocket server.');\n      setConnected(true);\n    });\n\n    newRos.on('error', (error) => {\n      console.log('Error connecting to websocket server: ', error);\n      setConnected(false);\n    });\n\n    newRos.on('close', () => {\n      console.log('Connection to websocket server closed.');\n      setConnected(false);\n    });\n\n    setRos(newRos);\n\n    return () => {\n      if (newRos) {\n        newRos.close();\n      }\n    };\n  }, []);\n\n  const publishMessage = () => {\n    if (ros) {\n      const topic = new ROSLIB.Topic({\n        ros: ros,\n        name: '/test_topic',\n        messageType: 'std_msgs/String'\n      });\n\n      const message = new ROSLIB.Message({\n        data: 'Hello from React!'\n      });\n\n      topic.publish(message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>ROS 2 Humble React App</h1>\n      <p>Connection status: {connected ? 'Connected' : 'Disconnected'}</p>\n      <button onClick={publishMessage}>Publish Message</button>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMU,MAAM,GAAG,IAAIT,MAAM,CAACU,GAAG,CAAC;MAC5BC,GAAG,EAAE;IACP,CAAC,CAAC;IAEFF,MAAM,CAACG,EAAE,CAAC,YAAY,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7CR,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,CAAC;IAEFG,MAAM,CAACG,EAAE,CAAC,OAAO,EAAGG,KAAK,IAAK;MAC5BF,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEC,KAAK,CAAC;MAC5DT,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;IAEFG,MAAM,CAACG,EAAE,CAAC,OAAO,EAAE,MAAM;MACvBC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;MACrDR,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;IAEFE,MAAM,CAACC,MAAM,CAAC;IAEd,OAAO,MAAM;MACX,IAAIA,MAAM,EAAE;QACVA,MAAM,CAACO,KAAK,CAAC,CAAC;MAChB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIV,GAAG,EAAE;MACP,MAAMW,KAAK,GAAG,IAAIlB,MAAM,CAACmB,KAAK,CAAC;QAC7BZ,GAAG,EAAEA,GAAG;QACRa,IAAI,EAAE,aAAa;QACnBC,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,MAAMC,OAAO,GAAG,IAAItB,MAAM,CAACuB,OAAO,CAAC;QACjCC,IAAI,EAAE;MACR,CAAC,CAAC;MAEFN,KAAK,CAACO,OAAO,CAACH,OAAO,CAAC;IACxB;EACF,CAAC;EAED,oBACEpB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B5B,OAAA;MAAAwB,QAAA,GAAG,qBAAmB,EAACrB,SAAS,GAAG,WAAW,GAAG,cAAc;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpE5B,OAAA;MAAQ6B,OAAO,EAAEd,cAAe;MAAAS,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV;AAAC1B,EAAA,CAxDQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA0DZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}